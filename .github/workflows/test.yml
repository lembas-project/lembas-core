name: Run Tests

on:
  push:
    branches:
    - main
    tags:
    - v[0-9]+.[0-9]+.[0-9]+*
  pull_request:
  merge_group:

jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        python-version: ['3.9', '3.10', '3.11']
        include:
        - python-version: '3.12-dev'
          os: ubuntu-latest
          experimental: true
    runs-on: ${{ matrix.os }}
    steps:
    - name: Check out repository
      uses: actions/checkout@v4
    - name: Set up python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install library
      run: pip install ".[ci]"
    - name: Static type checking
      run: mypy
    - name: Test with pytest
      run: |
        pytest \
          --junitxml=./test-reports/junit.xml \
          --cov-report xml:./test-reports/coverage.xml \
          --cov lembas \
          --cov tests \
          tests
    - name: Publish code coverage
      uses: codecov/codecov-action@v4
      with:
        files: ./test-reports/coverage.xml
        env_vars: OS,PYTHON
  # This check job runs to ensure all tests have passed, such that we can use it as a "wildcard" for branch
  # protection to ensure all tests pass before a PR can be merged.
  check:
    if: always()
    needs: [test]
    runs-on: ubuntu-latest
    steps:
    - name: Decide whether all required jobs succeeded or failed
      uses: re-actors/alls-green@release/v1
      with:
        jobs: ${{ toJSON(needs) }}

  publish:
    uses: ./.github/workflows/publish.yml
    needs: [check]
    secrets: inherit
    if: ${{ github.ref == 'refs/heads/main' || startsWith(github.event.ref, 'refs/tags/v') }}
