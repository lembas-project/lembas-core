name: "Publish"

on:
  workflow_call:

jobs:
  build-conda-package:
    name: Build conda package
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4
      with:
        fetch-depth: 0
    - name: Create build environment
      run: |
        source $CONDA/bin/activate
        conda create -n build --file ./etc/build.linux-64.lock
    - name: conda build
      run: |
        source $CONDA/bin/activate && conda activate build
        VERSION=`python -m setuptools_scm` conda build conda.recipe
        mv $CONDA_PREFIX/conda-bld .
    - name: Upload the build artifact
      uses: actions/upload-artifact@b4b15b8c7c6ac21ea08fcf65892d2ee8f75cf882 # v4
      with:
        name: conda-${{ github.sha }}
        path: conda-bld
        if-no-files-found: error
        retention-days: 7

  build-wheel:
    name: Build the wheel
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4
      with:
        fetch-depth: 0
    - name: Setup Python
      uses: actions/setup-python@0a5c61591373683505ea898e09a3ea4f39ef2b9c # v5
      with:
        python-version: "3.10"
    - name: Install build dependencies
      run: pip install build
    - name: Build the package
      run: python -m build
    - name: Upload the build artifact
      uses: actions/upload-artifact@b4b15b8c7c6ac21ea08fcf65892d2ee8f75cf882 # v4
      with:
        name: wheel-${{ github.sha }}
        path: dist/*
        if-no-files-found: error
        retention-days: 7

  # This check job runs to ensure all tests and builds  have passed, such that we can use it as a "wildcard"
  # for branch protection to ensure all tests pass before a PR can be merged.
  check:
    name: Check all builds successful
    if: always()
    needs: [build-conda-package, build-wheel]
    runs-on: ubuntu-latest
    steps:
    - name: Decide whether all required jobs succeeded or failed
      uses: re-actors/alls-green@release/v1
      with:
        jobs: ${{ toJSON(needs) }}

  publish-conda-pkg-to-anaconda-dot-org:
    name: Publish conda package to Anaconda.org
    runs-on: ubuntu-latest
    if: github.event_name == 'push'  # Only run on push to main branch
    needs: [check]
    steps:
    - name: Retrieve the source code
      uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4
      with:
        fetch-depth: 0
    - name: Create build environment
      run: |
        source $CONDA/bin/activate
        conda create -n build --file ./etc/build.linux-64.lock
    - name: Download the build artifacts
      uses: actions/download-artifact@7a1cd3216ca9260cd8022db641d960b1db4d1be4 # v4
      with:
        name: conda-${{ github.sha }}
        path: ./conda-bld
    - name: publish
      env:
        TOKEN: ${{ secrets.ANACONDA_ORG_TOKEN }}
      run: |
        source $CONDA/bin/activate && conda activate build
        [[ "$GITHUB_REF" =~ ^refs/tags/v ]] || export LABEL="--label dev"
        anaconda --verbose \
          --token $TOKEN \
          upload \
          --user mattkram \
          $LABEL \
          --force \
          ./conda-bld/noarch/lembas-*

  publish-wheel-to-anaconda-dot-org:
    name: Publish wheel to Anaconda.org
    runs-on: ubuntu-latest
    if: github.event_name == 'push'  # Only run on push to main branch
    needs: [check]
    steps:
    - name: Retrieve the source code
      uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4
      with:
        fetch-depth: 0
    - name: Download the build artifacts
      uses: actions/download-artifact@7a1cd3216ca9260cd8022db641d960b1db4d1be4 # v4
      with:
        name: wheel-${{ github.sha }}
        path: ./dist
    - name: Upload to anaconda.org
      env:
        TOKEN: ${{ secrets.ANACONDA_ORG_TOKEN }}
      run: |
        source $CONDA/bin/activate
        conda install -y anaconda-client
        [[ "$GITHUB_REF" =~ ^refs/tags/v ]] || export LABEL="--label dev"
        anaconda --verbose \
          --token $TOKEN \
          upload \
          --user mattkram \
          $LABEL \
          --force \
          ./dist/*.whl

  publish-to-pypi:
    name: Publish wheel to PyPI
    if: startsWith(github.event.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    needs: [check]
    steps:
    - name: Checkout
      uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4
    - name: Setup Python
      uses: actions/setup-python@0a5c61591373683505ea898e09a3ea4f39ef2b9c # v5
    - name: Download the build artifacts
      uses: actions/download-artifact@7a1cd3216ca9260cd8022db641d960b1db4d1be4 # v4
      with:
        name: wheel-${{ github.sha }}
        path: ./dist
    - name: Install build dependencies
      run: pip install twine
    - name: Upload to PyPI with twine
      run: python -m twine upload ./dist/*
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
